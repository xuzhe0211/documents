(window.webpackJsonp=window.webpackJsonp||[]).push([[67],{442:function(n,t,e){"use strict";e.r(t);var a=e(42),i=Object(a.a)({},(function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[e("h2",{attrs:{id:"animation-css"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#animation-css"}},[n._v("#")]),n._v(" animation(Css)")]),n._v(" "),e("h3",{attrs:{id:"兼容性与属性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#兼容性与属性"}},[n._v("#")]),n._v(" 兼容性与属性")]),n._v(" "),e("blockquote",[e("p",[n._v("猛戳"),e("a",{attrs:{href:"https://caniuse.com/?search=animation",target:"_blank",rel:"noopener noreferrer"}},[n._v("这里"),e("OutboundLink")],1),n._v("查看兼容性")])]),n._v(" "),e("ul",[e("li",[n._v("animation-name: 动画名称")]),n._v(" "),e("li",[n._v("animation-duration: 动画时长")]),n._v(" "),e("li",[n._v("animation-timing-function: 动画执行方式")]),n._v(" "),e("li",[n._v("animation-delay: 动画延迟事件")]),n._v(" "),e("li",[n._v("animation-iteration-count: 动画执行次数")]),n._v(" "),e("li",[n._v("animation-direction: 是否反向执行动画")]),n._v(" "),e("li",[n._v("animation-fill-node: 动画执行前后的样式")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('.box {\n    width: 200px;\n    heigh: 200px;\n    background-color: aqua;\n    position:absolute;\n    left: 0;\n    top: 0;\n    animation: test 3s linear 2s infinite;\n}\n\n@keyframes test {\n    from {}\n    to {\n        width: 50px;\n        height: 50px;\n        background-color: red;\n        opacity: 0.5;\n        left: 500px;\n        top: 500px;\n    }\n}\n\n<div class="box"></div>\n')])])]),e("h2",{attrs:{id:"requestanimationframe-js"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#requestanimationframe-js"}},[n._v("#")]),n._v(" requestAnimationFrame(JS)")]),n._v(" "),e("h3",{attrs:{id:"兼容性与基本概念"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#兼容性与基本概念"}},[n._v("#")]),n._v(" 兼容性与基本概念")]),n._v(" "),e("ul",[e("li",[e("p",[n._v("优势:")]),n._v(" "),e("ul",[e("li",[n._v("浏览器可以优化并行的动画动作，更合理的重新排列动作序列，并把能够合并的动作放在一个渲染周期内完成，从而呈现出更流畅的效果")]),n._v(" "),e("li",[n._v("一旦页面不处于浏览器的当前标签，就会停止刷新，这就节省了CPU、GPU和电力")])])]),n._v(" "),e("li",[e("p",[n._v("使用")]),n._v(" "),e("ul",[e("li",[n._v("持续调用requestAnimFrame即可")]),n._v(" "),e("li",[n._v("可以使用cancelAnimationFrame清除动画")])])])]),n._v(" "),e("h3",{attrs:{id:"举例"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#举例"}},[n._v("#")]),n._v(" 举例")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("#anim  {\n    position: absolute;\n    left: 0;\n    width: 150px;\n    height: 150px;\n    line-height: 150px;\n    background: aqua;\n    color: white;\n    border-radius: 10px;\n    padding: 1em;\n}\n\n<div id=\"anim\">Click here to start animation</div>\n\n// 兼容处理\nwindow.requestAnimFrame = (function() {\n    return (\n        window.requestAnimationFrame || \n        window.wikitRequestAnimationFrame || \n        window.mozRequestAnimationFrame ||\n        window.oRequestAnimationFrame ||\n        window.msRequestAnimationFrame ||\n        function (callback, element) {\n            window.setTimeout(callback, 1000/ 60);\n        }\n    )\n})()\n\nvar elem = document.getElementById('anim');\nvar startTime = undefined;\n\nfunction render(time) {\n    time = Date.now();\n    if (startTime === undefined) {\n        startTime = time;\n    }\n    elem.style.left = ((time - startTime) / 10) % 300 + 'px';\n    elem.style.top = ((time - startTime) / 10) % 300 + 'px';\n    elem.style.borderRadius = ((time - startTime) / 10) % 300 + 'px';\n    elem.style.opacity = Math.floor((time - startTime / 100)) % 2 === 0 ? 1 : 0.3\n}\n\nelem.onclick = function() {\n  (function animloop() {\n    render()\n    requestAnimFrame(animloop)\n  })()\n}\n")])])])])}),[],!1,null,null,null);t.default=i.exports}}]);