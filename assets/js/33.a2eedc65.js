(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{404:function(t,s,n){"use strict";n.r(s);var a=n(42),e=Object(a.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("p",[t._v("要实现css3 animation动画执行结束,停顿几秒后重新开始执行的效果，首先想到的是延时执行:animaition-delay,然后设置animation-iteration-count为infinite，即无限执行。但是不行，只有第一次执行之后，会有延时，后面就是不停顿执行。设置关键帧，也不好弄,那就借助js吧，思路很简单，将animation写进一个class里面，然后通过js的判断+setTimeout延时，增删这个class样式")]),t._v(" "),n("h2",{attrs:{id:"css代码"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#css代码"}},[t._v("#")]),t._v(" css代码")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v(".home .scrollTip {\n    position: relative;\n}\n.home.scrollTip.anmation{animation: ani 800ms;}\n@keyframes ani {\n    0% {\n        opacity: 1;\n        bottom: 0;\n    }\n    100% {\n        opacity: 0;\n        bottom: -40px\n    }\n}\n")])])]),n("h2",{attrs:{id:"js代码"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#js代码"}},[t._v("#")]),t._v(" js代码")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("// 获取dom节点\nconst scrollTip = document.querySelector('.scrollTip');\n// 页面载入时，给它执行一次\nscrollTip.classList.add('animate');\n// 监听动画是否结束\nscrollTip.addEventListener('animationend', function() {\n    // 动画结束，移出动画的样式类\n    scrollTip.classlist.remove('animate');\n    // 延时1s，再将动画加入\n    setTimeout(() => {\n        scrollTip.classList.add('animate');\n    }, 1000);\n})\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);