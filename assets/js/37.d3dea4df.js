(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{410:function(a,t,s){"use strict";s.r(t);var e=s(42),r=Object(e.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h2",{attrs:{id:"概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#概念"}},[a._v("#")]),a._v(" 概念")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("var regexp = new RegExp(pattern, modifiers);\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[a._v("TIP")]),a._v(" "),s("p",[a._v("pattern: 描述表达式模式")]),a._v(" "),s("p",[a._v("modifiers: 修饰符--用于指定全局，区分大小写和多行匹配")])]),a._v(" "),s("h3",{attrs:{id:"修饰符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#修饰符"}},[a._v("#")]),a._v(" 修饰符")]),a._v(" "),s("ul",[s("li",[a._v("i 执行大小写不敏感的匹配")]),a._v(" "),s("li",[a._v("g 执行全局匹配")]),a._v(" "),s("li",[a._v("m 执行多行匹配")])]),a._v(" "),s("h3",{attrs:{id:"方括号"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方括号"}},[a._v("#")]),a._v(" 方括号")]),a._v(" "),s("blockquote",[s("p",[a._v("用于查找某个范围内的字符")])]),a._v(" "),s("p",[a._v("[abc] -- 查找方括号内的任意字符")]),a._v(" "),s("p",[a._v("[^abc]-- 查找任何不再放阔内的字符")]),a._v(" "),s("p",[a._v("[0-9]---查找任何从0-9的数字")]),a._v(" "),s("p",[a._v("...")]),a._v(" "),s("h3",{attrs:{id:"元字符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#元字符"}},[a._v("#")]),a._v(" 元字符")]),a._v(" "),s("blockquote",[s("p",[a._v("拥有特殊含义的字符")])]),a._v(" "),s("ul",[s("li",[a._v(". 查找单个字符，除换行和行结束符")]),a._v(" "),s("li",[a._v("\\d 数字")]),a._v(" "),s("li",[a._v("\\D 非数字")]),a._v(" "),s("li",[a._v("\\s 空白符")]),a._v(" "),s("li",[a._v("\\S 非空白符")]),a._v(" "),s("li",[a._v("\\w 查找单词字符")]),a._v(" "),s("li",[a._v("\\W查找非单词字符")])]),a._v(" "),s("h4",{attrs:{id:"量词"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#量词"}},[a._v("#")]),a._v(" 量词")]),a._v(" "),s("ul",[s("li",[a._v("n+ 包含至少一个n个字符")]),a._v(" "),s("li",[a._v("n* 零个或多个")]),a._v(" "),s("li",[a._v("n? 零个或者1个")]),a._v(" "),s("li",[a._v("n{x} 包含x个n的序列字符串")]),a._v(" "),s("li",[a._v("n{x,y}")]),a._v(" "),s("li",[a._v("?=n 匹配任何其后紧接指定字符串n的字")]),a._v(" "),s("li",[a._v("?!n 匹配任何其后没有紧接着指定n的字符串")])]),a._v(" "),s("h2",{attrs:{id:"用法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#用法"}},[a._v("#")]),a._v(" 用法")]),a._v(" "),s("h3",{attrs:{id:"test-是否含有相同的字符串-返回true、false"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#test-是否含有相同的字符串-返回true、false"}},[a._v("#")]),a._v(" test() 是否含有相同的字符串，返回true、false")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("var aes = 'abc'\n/abc/.test(aes);\n")])])]),s("h3",{attrs:{id:"match-字符串方法是否有符合匹配字符串-返回一个数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#match-字符串方法是否有符合匹配字符串-返回一个数组"}},[a._v("#")]),a._v(" match() 字符串方法是否有符合匹配字符串，返回一个数组")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("var reg = /abg/gi;\nvar abc = 'abcedabcsdfABC';\nconsole.log(abc.match(regs)); // ['abc', 'abc'];\n")])])]),s("h3",{attrs:{id:"search-方法-第一个匹配字符串的下标"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#search-方法-第一个匹配字符串的下标"}},[a._v("#")]),a._v(" search（）方法 第一个匹配字符串的下标")]),a._v(" "),s("h3",{attrs:{id:"split"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#split"}},[a._v("#")]),a._v(" split()")]),a._v(" "),s("h3",{attrs:{id:"replace"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#replace"}},[a._v("#")]),a._v(" replace()")]),a._v(" "),s("h3",{attrs:{id:"exec-方法-将匹配成功的内容放到数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#exec-方法-将匹配成功的内容放到数组"}},[a._v("#")]),a._v(" exec() 方法，将匹配成功的内容放到数组")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("$1, $2, $3\n\nvar reg = /(.*)\\s(.*)/gi;\nvar str = 'baidu,taobao';\nconsole.log(str.replace(reg, '$2,$1')); // $1 代表baidu  $2代表taobao\n")])])])])}),[],!1,null,null,null);t.default=r.exports}}]);