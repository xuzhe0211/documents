(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{360:function(n,t,e){"use strict";e.r(t);var s=e(42),r=Object(s.a)({},(function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[e("h2",{attrs:{id:"扑克牌问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#扑克牌问题"}},[n._v("#")]),n._v(" 扑克牌问题")]),n._v(" "),e("p",[n._v("有一堆扑克牌，将牌第一张放到桌子上，在将接下来牌的第一张放到牌底，如此往复；最后桌子上的牌顺序为:(牌底)1，2，3，4，5，6，6，7，8，9，10，11，12，13(牌顶)；"),e("br"),n._v("\n问：原来牌的顺序，用函数实现")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("let arr = [1,2,3,4,5,6,7,8,9,10,11,12,13];\nlet _arr = [];\nfunction sortPoke() {\n    while(arr.length > 0) {\n        //选择抽取哪张牌\n        if(arr.length % 2 === 1) {\n            _arr.push(arr.pop());\n        } else {\n            _arr.push(arr.shift());\n        }\n    }\n    return _arr;\n}\nconsole.log(sortPoke())\n//[13, 1, 12, 2, 11, 3, 10, 4, 9, 5, 8, 6, 7]\n")])])]),e("h2",{attrs:{id:"javascript-深拷贝"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#javascript-深拷贝"}},[n._v("#")]),n._v(" JavaScript 深拷贝")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("//\nfunction copyObj(obj) {\n    var newobj = {};\n    for(const key in obj) {\n        if(typeof obj[key] === 'object') {\n            newobj[key] = copyObj(obj[key])\n        } else {\n            newobj[key] = obj[key]\n        }\n    }\n    return newobj;\n}\n/** MessageChannel接口允许创建一个新的消息通道，并通过它的两个MessagePort属性发送数据。MessageChannel接口实例化以后，会有两个属性port1和port2.**/\nfunction copyObj(obj) {\n    return new Promise(resolve => {\n        const { port1, port2 } = new MessageChannel();\n        port1.postMessage(obj);\n        port2.onmessage = ev => resolve(ev.data);\n    })\n}\nvar obj1 = {a:1}\nvar clone1 = await structuralClone(obj1)\n")])])]),e("h2",{attrs:{id:"盛水最多的容器-双指针法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#盛水最多的容器-双指针法"}},[n._v("#")]),n._v(" 盛水最多的容器---双指针法")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("var maxArea = function(height) {\n    var left = 0;\n    var right = height - 1;\n    var max = 0;\n    while(left < right) {\n        var now = (right - left) * Math.min(height[right], height[left]);\n       max = now > max ? now : max;\n       if (height[left] > height[right]) {\n        right --;\n        } else {\n        left++;\n       }\n    }\n    return max;\n}\n")])])]),e("h2",{attrs:{id:"大数相加"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#大数相加"}},[n._v("#")]),n._v(" 大数相加")]),n._v(" "),e("p",[n._v("思路遍历两个字符串从个位数算起开始相加，定义temp接受两个数之和，除以10取余拼接上结果，最后判断temp是否大于0，如果大于9则进位temp=1\n"),e("code",[n._v("var addstring = function(num1, num2) { var len1 = num1.length, len2 = num2.length; temp = 0; res = ''; while(len1 || len2) { if(len1) { temp += +num1[--len1]; } if(len2) { temp += +num2[--len2]; } res = temp % 10 +res; if(temp > 9) { temp =1; } else { temp = 0; } if (temp) { res = 1 +res; } } return res; }")])]),n._v(" "),e("h2",{attrs:{id:"sqrt"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sqrt"}},[n._v("#")]),n._v(" sqrt")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("var mySqrt = function(x) {\n     if (x < 2) return x\n     let left = 1, mid, right = Math.floor(x / 2);\n     while (left <= right) {\n        mid = Math.floor(left + (right - left) / 2)\n        if (mid * mid === x) return mid\n        if (mid * mid < x) {\n            left = mid + 1\n        }else {\n            right = mid - 1\n        }\n     }\n     return right\n};\n")])])]),e("h2",{attrs:{id:"恢复空格"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#恢复空格"}},[n._v("#")]),n._v(" 恢复空格")]),n._v(" "),e("p",[n._v("哦，不！你不小心把一个长篇文章中的空格、标点都删掉了，并且大写也弄成了小写。像句子\"I reset the computer.It still didn't boot!\"已经变成'iresetthecomputeritstilldidntboot'。在处理标点符号和大小写之前，你得先把它断成词语。当然了，你有一本厚厚的词典dictionary,不过有些词没在词典里。假设文章用sentence表示，设计一个是算法，把文章断开，要求未识别的字符最少，返回未识别的字符数。")]),n._v(" "),e("p",[n._v("注意：本题对原题稍作改动，只需返回未识别的字符数")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("//示例\n输入：dictionary = ['looked', 'just', 'like', 'her', 'brother'];\nsentence = 'jesslookedjustliketimherbrother';\n输出 7\n解释：断句后'jess looked just like tim her brother',共7个未识别字符。\n\nvar respace = function(dictionary, sentence) {\n     if(sentence.length == 0) return 0;\n    let dp = new Array(sentence.length).fill(0);\n    for(let i = 1;i<=sentence.length;i++){\n        dp[i] = dp[i-1]+1;\n        // 上面表示，如果没有匹配那么dp[i]相比于dp[i-1]直接多1\n        // 接着讨论如果新加一个字符，组成了一个词的情况\n        for(let j=0;j<dictionary.length;j++){\n            let word = dictionary[j].length;\n            if(dictionary[j] == sentence.substring(i-word,i) && word<=i){\n                dp[i] = Math.min(dp[i],dp[i-word]);\n            }\n        }\n    }\n    return dp[sentence.length]\n};\n")])])]),e("h2",{attrs:{id:"两个数组的交集"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#两个数组的交集"}},[n._v("#")]),n._v(" 两个数组的交集")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("/**\n给定两个数组，编写一个函数来计算它们的交集。\n示例1：\n输入：nums1 = [1,2,2,1], num2 = [2,2];\n输出： [2,2]\n说明：\n   输出结果中每个元素出现的次数，应与元素在两个数组中出现的次数一致\n   我们可以不用考虑输出结果的顺序\n**/\nvar intersect = function(nums1, nums2) {\n    let tmp = [], arr = [];\n    if(nums1.length > nums2.length) {\n        tmp = nums1;\n        nums1 = nums2;\n        nums2 = tmp;\n    }\n    for (let key of nums1) {\n        temp = nums2.indexOf(key);\n        if(temp > -1) {\n            arr.push(key);\n            nums2.splice(temp, 1);\n        }\n    } \n    return arr;\n}\n")])])]),e("h2",{attrs:{id:"分割数组最大值"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#分割数组最大值"}},[n._v("#")]),n._v(" 分割数组最大值")]),n._v(" "),e("p",[n._v("给定一个非负整数数组和一个整数m,你需要将这个数组分成m个非空的连续子数组。设计一个算法使得这个m个子数组各自和的最大值最小。")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("//贪心算法\nvar splitArray = function(nums, m) {\n    let left = 0; right = 0;\n    let len = nums.length;\n    for(let i = 0; i < len; i++) {\n        right += nums[i];\n        if(left < nums[i]) {\n            left = num[i];\n        }\n    }\n    function check(mid, m) {\n        let sum = 0;\n        let cnt = 1;\n        for (let i = 0; i < len; i++) {\n            if (sum + nums[i] > mid) {\n                cnt++;\n                sum = nums[i];\n            } else {\n                sum += nums[i];\n            }\n        }\n        return cnt <= m;\n    }\n    while(left < right) {\n        let mid = Math.floor((left + right) / 2);\n        if (check(mid, m)) {\n            right = mid;\n        } else {\n            left = mid + 1;\n        }\n    }\n    return left;\n}\n")])])]),e("h3",{attrs:{id:"链表"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#链表"}},[n._v("#")]),n._v(" 链表")]),n._v(" "),e("ol",[e("li",[n._v("判断单链表是否带环")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("//第一种方法\nfunction judge(list) {\n\tvar set = new Set();\n    while(list) {\n    \tif (set.has(list)) {\n        \tconsole.log('存在环')；\n            console.log(list);\n            return true;\n        }\n        set.add(list);\n        list = list.next();\n    }\n    return set;\n}\n//快慢指针，设定快指针fast,慢指针slow,每次循环快指针fast移动两个位置，慢指针移动一个位置\nfunction judge(list) {\n\t//创建快慢指针\n    var fast = list.next.next,\n    \tslow = list.next;\n    while(list) {\n    \tif (fast === slow) {\n        \tconsole.log('存在环')；\n            console.log('fast:', fast);\n            console.log('slow:', slow);\n            return true;\n        }\n        fast = fast.next.next;\n        slow = slow.next;\n    }\n}\n")])])]),e("h2",{attrs:{id:"逻辑思维"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#逻辑思维"}},[n._v("#")]),n._v(" 逻辑思维")]),n._v(" "),e("ul",[e("li",[e("p",[n._v("一个班级60%喜欢足球，70%喜欢篮球，80%喜欢排球，问即三种球都喜欢占比有多少？\n三个都喜欢的人数最多时，就尽量重复排列\n60 70(10人喜欢一个)\n70 80(现共有80人， 60人喜欢三个 ，10人喜欢两个， 10人喜欢一个)")]),n._v(" "),e("p",[n._v("所以10%- 60%")])])])])}),[],!1,null,null,null);t.default=r.exports}}]);